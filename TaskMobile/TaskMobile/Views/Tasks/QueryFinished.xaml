<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="TaskMobile.Views.Tasks.QueryFinished"
             xmlns:local="clr-namespace:TaskMobile"
             xmlns:userControls="clr-namespace:TaskMobile.UserControls;assembly=TaskMobile"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             xmlns:behavior="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
             xmlns:core="clr-namespace:Xamarin.Forms;assembly=Xamarin.Forms.Core"
             xmlns:converter="clr-namespace:TaskMobile.Converters"
             prism:ViewModelLocator.AutowireViewModel="True"
            ControlTemplate="{StaticResource TenarisTemplate}"
             Title="Tareas Finalizadas">
    <RelativeLayout x:Name="FinishedContainer" HeightRequest="492">
        <Label Text="Tareas en estatus Finalizado" Style="{StaticResource LabelDirections}"
               RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=.05, Constant=0}"/>
        <StackLayout Orientation="Horizontal" 
                    RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=.50, Constant=0}"
                    RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.1, Constant=0}">
            <Label Text="Fecha inicio:" Style="{StaticResource LabelNormal}" Margin="10,15,0,0" Opacity="1"/>
            <DatePicker x:Name="StartDatePicker" Date="{Binding StartDate, Mode=TwoWay}" Margin="0,0,15,0">
            </DatePicker>
            <Label Text="Fecha fin:" Style="{StaticResource LabelNormal}" Margin="10,15,0,0"/>
            <DatePicker x:Name="EndDatePicker" Date="{Binding EndDate, Mode=TwoWay}" Margin="0,0,15,0">
            </DatePicker>
        </StackLayout>
        <RelativeLayout x:Name="VehicleAndDriver"
                        RelativeLayout.XConstraint="{ConstraintExpression 
                                        Type= RelativeToParent, 
                                        Property=Width, 
                                        Factor=.10, 
                                        Constant=0}"  >
            <RelativeLayout.YConstraint>
                <OnIdiom x:TypeArguments="Constraint" Phone="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.18, Constant=0}" 
                                                      Tablet="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.22, Constant=0}"
                                                      Desktop="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.25, Constant=0}"/>
            </RelativeLayout.YConstraint>
            <StackLayout x:Name="VehicleContainer"  Orientation="Horizontal"  VerticalOptions="Center">
                <Label Text="Vehículo: " Style="{StaticResource LabelDriverAndCar}"/>
                <Label Text="{Binding Vehicle}" Style="{StaticResource DriverAndCar}"/>
            </StackLayout>
            <StackLayout x:Name="DriverContainer" Orientation="Horizontal"
                          RelativeLayout.XConstraint="{ConstraintExpression 
                                        Type= RelativeToParent, 
                                        Property=Width, 
                                        Factor=.45, 
                                        Constant=0}">
                <Label Text="Chofer: " Style="{StaticResource LabelDriverAndCar}"/>
                <Label Text="{Binding Driver}" Style="{StaticResource DriverAndCar}"/>
            </StackLayout>
        </RelativeLayout>
        <Frame HasShadow="True" BackgroundColor="White" Margin="10,10,10,-10"
               RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width,  Factor=.05, Constant=0}"
               RelativeLayout.HeightConstraint = "{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.70}"
               RelativeLayout.WidthConstraint = "{ConstraintExpression  Type=RelativeToParent, Property=Width,  Factor=.90}">
            <RelativeLayout.YConstraint>
                <OnIdiom x:TypeArguments="Constraint" Phone="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.23, Constant=0}" 
                                                      Tablet="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.28, Constant=0}"
                                                      Desktop="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=.30, Constant=0}"/>
            </RelativeLayout.YConstraint>
            <StackLayout>
                <Grid>
                    <Grid.HeightRequest>
                        <OnIdiom x:TypeArguments="x:Double" Phone="90" 
                                                            Tablet="100" 
                                                            Desktop="110" />
                    </Grid.HeightRequest>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="0.75*" />
                        <ColumnDefinition Width="0.75*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>
                    <Label Text="Tarea" FontAttributes="Bold" Grid.Row="0" Grid.Column="0" />
                    <Label Text="Tipo de tarea" Grid.Row="0" Grid.Column="1" />
                    <Label Text="Remisión" FontAttributes="Bold" Grid.Row="0" Grid.Column="2" />
                    <Label Text="Origen" Grid.Row="0" Grid.Column="3" />
                    <Label Text="Destino" FontAttributes="Bold" Grid.Row="0" Grid.Column="4" />
                    <Label Text="Fecha" Grid.Row="0" Grid.Column="5" />
                    <Label Text="{Binding StateIcon}" Grid.Row="0" Grid.Column="6" />
                </Grid>
                <ListView x:Name="FinishedList"  
                      IsGroupingEnabled="True" 
                      ItemsSource="{Binding FinishedTasks}"
                      IsPullToRefreshEnabled="True"
                      RefreshCommand="{Binding RefreshCommand}"
                      IsRefreshing="{Binding IsRefreshing}">
                    <ListView.GroupHeaderTemplate>
                        <DataTemplate>
                            <ViewCell>
                                <Grid  BackgroundColor="{StaticResource Color.GrayGoogle}" Padding="10,10,10,10"  VerticalOptions="Center">
                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding Path=BindingContext.ToActivityCommand, Source={x:Reference FinishedList}}" CommandParameter="{Binding Number}" />
                                    </Grid.GestureRecognizers>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions >
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="0.75*" />
                                        <ColumnDefinition Width="0.75*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="0.5*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Text="{Binding Number}" Grid.Row="0" Grid.Column="0" />
                                    <Label Text="{Binding Type}" Grid.Row="0" Grid.Column="1" />
                                    <Label Text="{Binding Remission}" Grid.Row="0" Grid.Column="2" />
                                    <Label Text="{Binding Origin}" Grid.Row="0" Grid.Column="3" />
                                    <Label Text="{Binding Destination}" Grid.Row="0" Grid.Column="4" />
                                    <Label Text="{Binding DateTask, StringFormat='{0:dd-MM-yyyy}'}" Grid.Row="0" Grid.Column="5" />
                                    <userControls:FontAwesomeLabel Text="{Binding StateIcon}" Grid.Row="0" Grid.Column="6"
                                                            VerticalOptions="CenterAndExpand"
                                                            FontSize="20"
                                                            Opacity="0.6"
                                                            TextColor="{StaticResource Color.GrayPrimary}">
                                        <userControls:FontAwesomeLabel.GestureRecognizers>
                                            <TapGestureRecognizer Command="{Binding Path=BindingContext.DetailsCommand, Source={x:Reference FinishedList}}" CommandParameter="{Binding .}" />
                                        </userControls:FontAwesomeLabel.GestureRecognizers>
                                    </userControls:FontAwesomeLabel>
                                </Grid>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.GroupHeaderTemplate>
                    <ListView.ItemTemplate>
                        <DataTemplate >
                            <ViewCell>
                                <Grid >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2*" />
                                            <ColumnDefinition Width="2*" />
                                            <ColumnDefinition Width="2*" />
                                            <ColumnDefinition Width="2*" />
                                            <ColumnDefinition Width="2*" />
                                        </Grid.ColumnDefinitions>
                                        <Label Text="{Binding WorkOrder}" FontAttributes="Bold" Grid.Row="0" Grid.Column="0" >
                                            <Label.Style>
                                                <Binding Path="RowIsHeader" >
                                                    <Binding.Converter>
                                                        <converter:BoolToObject x:TypeArguments="core:Style"
                                                         WhenTrue="{StaticResource OpaqueLabel}"
                                                         WhenFalse="{StaticResource LabelNormal}" />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Label.Style>
                                        </Label>
                                        <Label Text="{Binding Lot}" Grid.Row="0" Grid.Column="1" >
                                            <Label.Style>
                                                <Binding Path="RowIsHeader" >
                                                    <Binding.Converter>
                                                        <converter:BoolToObject x:TypeArguments="core:Style"
                                                         WhenTrue="{StaticResource OpaqueLabel}"
                                                         WhenFalse="{StaticResource LabelNormal}" />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Label.Style>
                                        </Label>
                                        <Label Text="{Binding SapCode}" Grid.Row="0" Grid.Column="2" >
                                            <Label.Style>
                                                <Binding Path="RowIsHeader" >
                                                    <Binding.Converter>
                                                        <converter:BoolToObject x:TypeArguments="core:Style"
                                                         WhenTrue="{StaticResource OpaqueLabel}"
                                                         WhenFalse="{StaticResource LabelNormal}" />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Label.Style>
                                        </Label>
                                        <Label Text="{Binding PiecesText}" Grid.Row="0" Grid.Column="3">
                                            <Label.Style>
                                                <Binding Path="RowIsHeader" >
                                                    <Binding.Converter>
                                                        <converter:BoolToObject x:TypeArguments="core:Style"
                                                         WhenTrue="{StaticResource OpaqueLabel}"
                                                         WhenFalse="{StaticResource LabelNormal}" />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Label.Style>
                                        </Label>
                                        <Label Text="{Binding TonsText}"  Grid.Row="0" Grid.Column="4" >
                                            <Label.Style>
                                                <Binding Path="RowIsHeader" >
                                                    <Binding.Converter>
                                                        <converter:BoolToObject x:TypeArguments="core:Style"
                                                         WhenTrue="{StaticResource OpaqueLabel}"
                                                         WhenFalse="{StaticResource LabelNormal}" />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Label.Style>
                                        </Label>
                                    </Grid>
                                </Grid>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackLayout>
        </Frame>
    </RelativeLayout>
</ContentPage>